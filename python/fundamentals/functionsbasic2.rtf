{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red0\green0\blue0;\red202\green202\blue202;
\red167\green197\blue152;\red183\green111\blue179;\red70\green137\blue204;\red212\green214\blue154;\red140\green211\blue254;
\red67\green192\blue160;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\csgenericrgb\c0\c0\c0;\cssrgb\c83137\c83137\c83137;
\cssrgb\c70980\c80784\c65882;\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;
\cssrgb\c30588\c78824\c69020;\cssrgb\c80784\c56863\c47059;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # 1. Countdown - Create a function that accepts a number as an input. Return a new list that counts down by one, from the number (as the 0th element) down to 0 (as the last element)\cf4 \strokec4 \
x = \cf5 \strokec5 5\cf4 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \strokec6 for\cf4 \strokec4  x \cf7 \strokec7 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (x, -\cf5 \strokec5 1\cf4 \strokec4 , -\cf5 \strokec5 1\cf4 \strokec4 ):\
    \cf8 \strokec8 print\cf4 \strokec4 ([x])\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec2 # 2. Print and Return - Create a function that will receive a list with two numbers. Print the first value and return the second.\cf4 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \strokec7 def\cf4 \strokec4  \cf8 \strokec8 printReturn\cf4 \strokec4 (\cf9 \strokec9 a\cf4 \strokec4 , \cf9 \strokec9 b\cf4 \strokec4 ):\
    \cf8 \strokec8 print\cf4 \strokec4 (a)\
    \cf6 \strokec6 return\cf4 \strokec4  b\
printReturn(\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 )\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec2 # 3. First Plus Length - Create a function that accepts a list and returns the sum of the first value in the list plus the list's length.\cf4 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \strokec7 def\cf4 \strokec4  \cf8 \strokec8 first_plus_length\cf4 \strokec4 (\cf9 \strokec9 list\cf4 \strokec4 ):\
    \cf8 \strokec8 sum\cf4 \strokec4  = \cf5 \strokec5 0\cf4 \strokec4 \
    \cf6 \strokec6 for\cf4 \strokec4  i \cf7 \strokec7 in\cf4 \strokec4  \cf10 \strokec10 list\cf4 \strokec4 :\
        \cf8 \strokec8 sum\cf4 \strokec4  = list[\cf5 \strokec5 0\cf4 \strokec4 ] + \cf8 \strokec8 len\cf4 \strokec4 (\cf10 \strokec10 list\cf4 \strokec4 )\
    \cf6 \strokec6 return\cf4 \strokec4  \cf8 \strokec8 sum\cf4 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf8 \strokec8 print\cf4 \strokec4 (first_plus_length([\cf5 \strokec5 1\cf4 \strokec4 ,\cf5 \strokec5 2\cf4 \strokec4 ,\cf5 \strokec5 3\cf4 \strokec4 ,\cf5 \strokec5 4\cf4 \strokec4 ,\cf5 \strokec5 5\cf4 \strokec4 ]))\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec2 # 4. Write a function that accepts a list and creates a new list containing only the values from the original list that are greater than its 2nd value. Print how many values this is and then return the new list. If the list has less than 2 elements, have the function return False\cf4 \strokec4 \
\cf7 \strokec7 def\cf4 \strokec4  \cf8 \strokec8 values_greater_than_second\cf4 \strokec4 (\cf9 \strokec9 list\cf4 \strokec4 ):\
    \cf6 \strokec6 for\cf4 \strokec4  i \cf7 \strokec7 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (\cf5 \strokec5 0\cf4 \strokec4 , \cf8 \strokec8 len\cf4 \strokec4 (\cf10 \strokec10 list\cf4 \strokec4 )):\
        \cf6 \strokec6 if\cf4 \strokec4  \cf8 \strokec8 len\cf4 \strokec4 (\cf10 \strokec10 list\cf4 \strokec4 ) < \cf5 \strokec5 2\cf4 \strokec4 :\
            \cf8 \strokec8 print\cf4 \strokec4 (\cf11 \strokec11 "False"\cf4 \strokec4 )\
        \cf6 \strokec6 elif\cf4 \strokec4  i <= list[\cf5 \strokec5 1\cf4 \strokec4 ]:\
            \cf6 \strokec6 del\cf4 \strokec4 (i)\
            \cf8 \strokec8 print\cf4 \strokec4 (\cf10 \strokec10 list\cf4 \strokec4 )\
\cf8 \strokec8 print\cf4 \strokec4 (values_greater_than_second([\cf5 \strokec5 5\cf4 \strokec4 ,\cf5 \strokec5 2\cf4 \strokec4 ,\cf5 \strokec5 3\cf4 \strokec4 ,\cf5 \strokec5 2\cf4 \strokec4 ,\cf5 \strokec5 1\cf4 \strokec4 ,\cf5 \strokec5 4\cf4 \strokec4 ]))\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf8 \strokec8 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec2 # 5. This Length, That Value - Write a function that accepts two integers as parameters: size and value. The function should create and return a list whose length is equal to the given size, and whose values are all the given value.\cf4 \strokec4 \
\cf7 \strokec7 def\cf4 \strokec4  \cf8 \strokec8 lengthValue\cf4 \strokec4 (\cf9 \strokec9 a\cf4 \strokec4 , \cf9 \strokec9 b\cf4 \strokec4 ):\
    a = \cf8 \strokec8 len\cf4 \strokec4 (\cf10 \strokec10 list\cf4 \strokec4 )\
    b = i\
    \cf6 \strokec6 return\cf4 \strokec4  [i]   \
\cf8 \strokec8 print\cf4 \strokec4 (lengthValue(\cf5 \strokec5 4\cf4 \strokec4 , \cf5 \strokec5 7\cf4 \strokec4 ))\
}